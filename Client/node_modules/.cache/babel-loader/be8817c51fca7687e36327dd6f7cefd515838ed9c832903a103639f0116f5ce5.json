{"ast":null,"code":"// components/PrivateRoute.js\nimport React,{useContext}from'react';import{Route,Navigate}from'react-router-dom';import{AuthContext}from'../contexts/AuthContext';import{jsx as _jsx}from\"react/jsx-runtime\";const PrivateRoute=_ref=>{let{component:Component,...rest}=_ref;const{user,loading}=useContext(AuthContext);if(loading){return/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"});}return/*#__PURE__*/_jsx(Route,{...rest,render:props=>user?/*#__PURE__*/_jsx(Component,{...props}):/*#__PURE__*/_jsx(Navigate,{to:\"/login\"})});};export default PrivateRoute;","map":{"version":3,"names":["React","useContext","Route","Navigate","AuthContext","jsx","_jsx","PrivateRoute","_ref","component","Component","rest","user","loading","children","render","props","to"],"sources":["C:/Users/HP/virtual-reality-app/Client/src/components/PrivateRoute.js"],"sourcesContent":["// components/PrivateRoute.js\r\nimport React, { useContext } from 'react';\r\nimport { Route, Navigate } from 'react-router-dom';\r\nimport { AuthContext } from '../contexts/AuthContext';\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n  const { user, loading } = useContext(AuthContext);\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        user ? <Component {...props} /> : <Navigate to=\"/login\" />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,EAAIC,UAAU,KAAQ,OAAO,CACzC,OAASC,KAAK,CAAEC,QAAQ,KAAQ,kBAAkB,CAClD,OAASC,WAAW,KAAQ,yBAAyB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEtD,KAAM,CAAAC,YAAY,CAAGC,IAAA,EAAuC,IAAtC,CAAEC,SAAS,CAAEC,SAAS,CAAE,GAAGC,IAAK,CAAC,CAAAH,IAAA,CACrD,KAAM,CAAEI,IAAI,CAAEC,OAAQ,CAAC,CAAGZ,UAAU,CAACG,WAAW,CAAC,CAEjD,GAAIS,OAAO,CAAE,CACX,mBAAOP,IAAA,QAAAQ,QAAA,CAAK,YAAU,CAAK,CAAC,CAC9B,CAEA,mBACER,IAAA,CAACJ,KAAK,KACAS,IAAI,CACRI,MAAM,CAAEC,KAAK,EACXJ,IAAI,cAAGN,IAAA,CAACI,SAAS,KAAKM,KAAK,CAAG,CAAC,cAAGV,IAAA,CAACH,QAAQ,EAACc,EAAE,CAAC,QAAQ,CAAE,CAC1D,CACF,CAAC,CAEN,CAAC,CAED,cAAe,CAAAV,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}